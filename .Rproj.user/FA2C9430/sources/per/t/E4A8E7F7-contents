---
title: "The Statistical Consulting Studio"
subtitle: "Annual Consultation Report"
author:   "Dr. Sarah Schwartz, Director"
date:     "January - December 2020"
output:
  pdf_document:
    toc: no
    number_sections: false
header-includes:
    - \usepackage{geometry}
      \geometry{
        top=1in,            
        inner=1in,
        outer=1in,
        bottom=1in,     
      }
    - \usepackage{fancyhdr}
    - \usepackage{lipsum}
    - \usepackage{layout}
    

---


```{r, echo=FALSE, warning=FALSE, message=FALSE}
knitr::opts_chunk$set(echo = FALSE, 
                      warning = FALSE, 
                      message = FALSE,
                      fig.align = "center",
                      fig.width = 6,
                      fig.height = 4)
```

\vspace{5in}

```{r, fig.width=2, fig.align='center', fig.pos="b"}
knitr::include_graphics("StatStudioLogo_dark_smaller.png")
```



```{r, echo=FALSE, warning=FALSE, message=FALSE}
# Load packages
library("tidyverse")
library("REDCapR")
library("redcapAPI")
library("lubridate")
library("stringr")
library("forcats")
library("furniture")
library("pander")
library("ggalt")
library("RColorBrewer")

# Set dates to include
dt_beg <- ymd("2020-01-01")
dt_end <- ymd("2020-12-30")
```

```{r, echo=FALSE, warning=FALSE, message=FALSE}
pal_RB = c("coral", "dodgerblue")
pal_BB = c("aquamarine3", "darkblue")
```




```{r, echo=FALSE, warning=FALSE, message=FALSE}
### -------------------------------------------------- ###
### REDCapR: export data from REDCap and import into R
### -------------------------------------------------- ###

uri   <- "https://redcap.cehs.usu.edu/api/"
token <- "3833AFDE5DB376603FBEA9747787212E"
ds_raw    <- redcap_read(redcap_uri = uri, token = token)$data 


names(ds_raw) <- names(ds_raw) %>% 
  str_replace_all("_new_", "_")
```


```{r, include=FALSE}
ds_raw
```

```{r, echo=FALSE, warning=FALSE, message=FALSE}
### -------------------------------------------------- ###
### declare values and labels for formatting
### -------------------------------------------------- ###

department_vals = c(10, 20, 30, 40, 50, 60, 70, 80, 90, 99)
department_cats = c("COMD", "CPD", "FCHD", "KHS", "ITLS", 
                    "NHP", "PSY", "TEAL", "SPED", "Other")

role_vals = 1:2
role_cats = c("Faculty/Staff", "Student")

project_type_vals = c(1:7, 99)
project_type_cats = c("Publication", 
                      "Dissertation", 
                      "Thesis", 
                      "Abstract", 
                      "Poster",
                      "Grant",
                      "REDCap",
                      "Other")

employee_vals = c(1:4, 99)
employee_cats = c("Full Professor", 
                  "Associate Professor",
                  "Assistant Professor",
                  "Research Staff",
                  "Other Position")

student_vals = c(1:3, 99)
student_cats = c("PhD Student",
                 "Masters Student",
                 "Undergraduate",
                 "Other Degree")

intake_phase_vals = c(10, 20, 30)
intake_phase_cats = c("Planning/Design", 
                      "Data Collection/Cleaning", 
                      "Analysis/Reporting")

consult_vals = c(10, 20)
consult_cats = c("Sarah Schwartz", 
                 "Tyson Barrett")

location_vals = c(10, 20, 99)
location_cats = c("Sarah's Office (EDUC 455)",
                  "Conference Room (EDUC 454)",
                  "Other Location")

steps_vals = c(100, 125, 155,
               200, 260, 280, 
               320, 340, 360, 
               400, 420, 440, 
               500, 540, 560, 
               800, 810, 820)
steps_cats = c("Discussion - Project Orientation",
               "Discussion - Reviewer Comments",
               "Discussion - Other Topic",
               "Planning - Study Design & Methods",
               "Planning - Power & Sample Size",
               "Planning - Data Collection",
               "Data - Cleaning & Wrangling",
               "Data - Missing Data Concerns",
               "Data - Summarize & Visualize",
               "Analysis - Assumption Checking",
               "Analysis - Software Usage",
               "Analysis - Interpreting Results",
               "Drafting - Methods & Results",
               "Drafting - Tables",
               "Drafting - Figures",
               "REDCap - Intro & Demo",
               "REDCap - Training",
               "REDCap - Setup Project")

area_cats = c("Discussion",
              "Planning",
              "Data",
              "Analysis",
              "Drafting",
              "REDCap")

subarea_cats = c(  "Project Orientation",
                   "Reviewer Comments",
                   "Other Topic",
                   "Study Design & Methods",
                   "Power & Sample Size",
                   "Data Collection",
                   "Cleaning & Wrangling",
                   "Missing Data Concerns",
                   "Summarize & Visualize",
                   "Assumption Checking",
                   "Software Usage",
                   "Interpreting Results",
                   "Methods & Results",
                   "Tables",
                   "Figures",
                   "Intro & Demo",
                   "Training",
                   "Setup Project")


methods_vals = c(1, 100,
                 110, 120, 130, 140, 
                 200, 210, 220, 230, 240, 
                 300, 310, 320, 330, 340, 350, 
                 400, 
                 500, 
                 800)
methods_cats = c("Not applicable",
                 "Undetermined at this point",
                 "Power Analysis & Sample Size", 
                 "Descriptive Summaries",
                 "Visualizing - raw data", 
                 "Visualizing - model results", 
                 "Validity and Reliability", 
                 "Develop Survey or Scale", 
                 "Measurement Model: CFA or EFA", 
                 "Mediation Analysis", 
                 "SEM & path analysis", 
                 "ANOVA or t-tests", 
                 "Repeated Measures ANOVA", 
                 "MANOVA", 
                 "Multiple Regression", 
                 "Generalized Regression", 
                 "Multilevel Models: HLM, LMM, GEE, GLMM", 
                 "Variable Selection", 
                 "Missing Data Analysis", 
                 "Mixed-Methods")


software_vals = c(10*(0:7), 90, 91, 9599)

software_cats = c("None",
                  "SPSS",
                  "R",
                  "Mplus",
                  "Stata",
                  "Excel",
                  "SAS",
                  "G*Power",
                  "REDCap",
                  "Qualtrics",
                  "Other")
```

```{r, echo=FALSE, warning=FALSE, message=FALSE}
### -------------------------------------------------- ###
### Apply labels and formatting
### -------------------------------------------------- ###

ds <- ds_raw %>% 
  tidyr::separate(redcap_event_name,
                  into = c("event", "arm", "time")) %>% 
  dplyr::mutate(event = event  %>% factor(levels = c("request", "cycle"))) %>% 
  dplyr::select(-arm, -time) %>% 
  dplyr::mutate(client_dept = client_dept %>% 
                  factor(levels = department_vals,
                         labels = department_cats)) %>% 
  dplyr::mutate(client_dept_text = ifelse(client_dept == "Other",
                                          client_dept_other,
                                          client_dept %>% as.character())) %>% 
  dplyr::mutate(client_usu_role = client_usu_role %>% 
                  factor(levels = role_vals,
                         labels = role_cats)) %>% 
  dplyr::mutate(proj_type = proj_type %>% 
                  factor(levels = project_type_vals,
                         labels = project_type_cats)) %>% 
  dplyr::mutate(proj_type_text = ifelse(proj_type == "Other",
                                        proj_type_other,
                                        proj_type %>% as.character())) %>% 
  dplyr::mutate(employee_position = employee_position %>% 
                  factor(levels = employee_vals,
                         labels = employee_cats)) %>% 
  dplyr::mutate(employee_position_text = ifelse(employee_position == "Other Position",
                                                employee_position_other,
                                                employee_position %>% as.character())) %>% 
  dplyr::mutate(student_degree = student_degree %>% 
                  factor(levels = student_vals,
                         labels = student_cats)) %>% 
  dplyr::mutate(student_degree_text = ifelse(student_degree == "Other Degree",
                                             student_degree_other,
                                             student_degree %>% as.character())) %>% 
  dplyr::mutate(intake_phase = intake_phase %>% 
                  factor(levels = intake_phase_vals,
                         labels = intake_phase_cats) %>% 
                  as.character()) %>% 
  dplyr::mutate(work_date = work_date %>% ymd) %>% 
  dplyr::mutate(work_consult = work_consult %>% 
                  factor(levels = consult_vals,
                         labels = consult_cats)) %>% 
  dplyr::mutate(meet_date = meet_date %>% ymd) %>% 
  dplyr::mutate(meet_consult = meet_consult %>% 
                  factor(levels = consult_vals,
                         labels = consult_cats)) %>% 
  dplyr::mutate(meet_loc = meet_loc %>% 
                  factor(levels = location_vals,
                         labels = location_cats)) %>% 
  dplyr::mutate(meet_loc_text = ifelse(meet_loc == "Other Location",
                                       meet_loc_other,
                                       meet_loc %>% as.character())) %>% 
  dplyr::mutate(meet_attend_text = ifelse(meet_attend == 1,
                                          paste0("- also attending: ", 
                                                 meet_attend_other),
                                          "")) %>% 
  dplyr::mutate(meet_remote_text = ifelse(meet_remote == 1,
                                          paste0(";", meet_remote_notes),
                                          "")) %>% 
  dplyr::filter(record_num %in% 443:509) %>% 
  dplyr::mutate(client_dept = client_dept %>% 
                  forcats::fct_recode("HDFS" = "FCHD"))
```


```{r, include=FALSE}
ds
```


```{r, echo=FALSE, warning=FALSE, message=FALSE}
### -------------------------------------------------- ###
### Heading for each project
### -------------------------------------------------- ###

template_employ  <- " 
#### **%s %s** [%s] %s - %s    
> **%s**      
%s: *%s*
"

template_student <- "
#### **%s %s** [%s] %s with %s    - %s    
> **%s**      
%s: *%s*
"

ds_request <- ds %>% 
  mutate(bullet = ifelse(client_usu_role == role_cats[1],
                         sprintf(template_employ,
                                 ds$client_name_first,
                                 ds$client_name_last,
                                 ds$client_dept_text,
                                 ds$employee_position_text,
                                 ds$proj_type_text,
                                 ds$intake_title,
                                 ds$intake_phase,
                                 ds$intake_notes),
                         sprintf(template_student,
                                 ds$client_name_first,
                                 ds$client_name_last,
                                 ds$client_dept_text,
                                 ds$student_degree_text,
                                 ds$student_mentor,
                                 ds$proj_type_text,
                                 ds$intake_title,
                                 ds$intake_phase,
                                 ds$intake_notes))) %>% 
  filter(event == "request") %>% 
  mutate(event_type = "Request Form") %>% 
  select(record_num, 
         event,
         client_usu_role,
         client_dept,       client_dept_text,
         student_degree,    student_degree_text,
         employee_position, employee_position_text,
         proj_type,         proj_type_text,
         bullet)
```


```{r, include=FALSE}
ds_request
```

```{r}
df_appts <- readxl::read_excel("appointment_manager_statstudio_2020.xlsx")
```

```{r, include=FALSE}
df_appts
```



```{r, include=FALSE}
nrow(df_appts)
```

```{r, include=FALSE}
df_appts %>% 
  dplyr::group_by(`Student ID`) %>% 
  dplyr::tally() %>% 
  furniture::table1(n)
```



\clearpage

# Consultation Appointments

Over the course to 2020, I had over **400 official consultations**, nearly exclusively over Zoom video conferencing.  The include over **96 unique individuals**.   These consultations covered preparing grant proposals, discussing theses and dissertations, discussing analyses for funded grants, and discussions about journal articles and presentations.

Other communications and responses to these individuals were frequent, with several emails (that did not include an appointment) being exchanged each week. This was particularly prevalent with students.



# Requests by Role and Department


```{r,  fig.width=4, fig.height=2.5}
ds_request %>% 
  dplyr::group_by(client_usu_role) %>%
  dplyr::tally() %>%
  dplyr::mutate(prop = n/sum(n)) %>% 
  dplyr::ungroup() %>%
  ggplot(aes(x = client_usu_role,
             y = prop,
             fill = client_usu_role)) +
  geom_col(color = "black",
           alpha = .75) +
  geom_text(aes(label = scales::percent(prop), 
                y = prop, 
                group = 1),
            vjust = 2) +
  labs(x = NULL,
       y = NULL) +
  theme_bw() +
  theme(legend.position = "none") +
  scale_y_continuous(labels = scales::percent_format(),
                     breaks = .20*(0:10),
                     limits = c(0, .6))
```


```{r, fig.width=5, fig.height=3.5}
ds_request %>% 
  dplyr::group_by(client_dept) %>%
  dplyr::tally() %>%
  dplyr::mutate(prop = n/sum(n)) %>% 
  dplyr::ungroup() %>%
  dplyr::mutate(client_dept = client_dept %>% 
                  forcats::fct_reorder(-n)) %>% 
  ggplot(aes(x = client_dept,
             y = prop,
             fill = client_dept)) +
  geom_col(color = "black") +
  geom_text(aes(label = scales::percent(prop), 
                y = prop, 
                group = 1),
            vjust = -1) +
  labs(x = NULL,
       y = NULL) +
  theme_bw() +
  theme(legend.position = "none") +
  scale_y_continuous(labels = scales::percent_format(),
                     breaks = .10*(0:10),
                     limits = c(0, .42)) 
```



```{r}
ds_request %>% 
  dplyr::group_by(proj_type) %>%
  dplyr::tally() %>%
  dplyr::mutate(prop = n/sum(n)) %>% 
  dplyr::ungroup() %>%
  dplyr::mutate(proj_type = proj_type %>% 
                  forcats::fct_reorder(-n)) %>% 
  ggplot(aes(x = proj_type,
             y = prop,
             fill = proj_type)) +
  geom_col(color = "black") +
  geom_text(aes(label = scales::percent(prop), 
                y = prop, 
                group = 1),
            vjust = -1) +
  labs(x = NULL,
       y = NULL) +
  theme_bw() +
  theme(legend.position = "none") +
  scale_y_continuous(labels = scales::percent_format(),
                     breaks = .10*(0:10),
                     limits = c(0, .47)) 
```





```{r}
ds_request %>% 
  dplyr::group_by(client_dept, client_usu_role, ) %>% 
  dplyr::tally() %>% 
  dplyr::group_by(client_dept) %>% 
  dplyr::mutate(total = sum(n)) %>% 
  dplyr::ungroup() %>% 
  dplyr::mutate(prop = n/sum(n)) %>% 
  dplyr::mutate(client_dept = client_dept %>% 
                  forcats::fct_reorder(-total)) %>% 
  ggplot(aes(x = client_dept,
             y = prop,
             fill = client_usu_role)) +
  geom_col(color = "black") +
  geom_text(aes(label = scales::percent(prop), 
                y = prop, 
                group = client_usu_role),
            position = position_stack(vjust = 0.5),
            vjust = "center",
            size = 3.5) +
  labs(x = NULL,
       y = NULL,
       fill = NULL) +
  theme_bw() +
  theme(legend.position = c(1, 1),
        legend.justification = c(1.1, 1.1),
        legend.background = element_rect(color = "black")) +
  scale_y_continuous(labels = scales::percent_format(),
                     breaks = .10*(0:10))
```




```{r}
ds_request %>% 
  dplyr::mutate(proj_type = proj_type %>% 
                  forcats::fct_recode("Dissertation/Thesis" = "Dissertation",
                                      "Dissertation/Thesis" = "Thesis",
                                      "Other" = "Poster",
                                      "Other" = "REDCap") %>% 
                  forcats::fct_drop() %>% 
                  factor(levels = c("Grant",
                                    "Dissertation/Thesis",
                                    "Publication",
                                    "Other"))) %>% 
  dplyr::group_by(client_dept, proj_type) %>% 
  dplyr::tally() %>% 
  dplyr::group_by(client_dept) %>% 
  dplyr::mutate(total = sum(n)) %>% 
  dplyr::ungroup() %>% 
  dplyr::mutate(prop = n/sum(n)) %>% 
  dplyr::mutate(client_dept = client_dept %>% 
                  forcats::fct_reorder(-total)) %>% 
  ggplot(aes(x = client_dept,
             y = prop,
             fill = proj_type)) +
  geom_col(color = "black") +
  geom_text(aes(label = scales::percent(prop), 
                y = prop, 
                group = proj_type),
            position = position_stack(vjust = 0.5),
            vjust = "center",
            size = 3.5) +
  labs(x = NULL,
       y = NULL,
       fill = NULL) +
  theme_bw() +
  theme(legend.position = c(1, 1),
        legend.justification = c(1.1, 1.1),
        legend.background = element_rect(color = "black")) +
  scale_y_continuous(labels = scales::percent_format(),
                     breaks = .10*(0:10)) +
  scale_fill_manual(values = c("red", "dodgerblue", "coral", "gray"))
```








